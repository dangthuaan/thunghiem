package DemoBaiHoc;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.JFrame;
import javax.swing.JPanel;

import java.awt.geom.*;


public class MidTest extends JPanel {
	
	//Main void
	public static void main(String[] args) {
		JFrame window = new JFrame("MidTest");
		window.setContentPane(new MidTest());
		window.pack();
		window.setLocation(100, 60);
		window.setResizable(true);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setVisible(true);
	}
	
	private double xSunPosition;
	private double ySunPosition;

	// Init variable;
	private double frameNumber; // For animation, increases by 1 in each frame.
	private Path2D ground; // A path used for drawing the ground, with "hills".
	private double xleftRequested = 0; // horizontal and vertical limits in the
	private double xrightRequested = 7; // coordinate system applied to the
	private double ytopRequested = 4; // drawgin area.
	private double ybottomRequested = -1;
	private float pixelSize;
	
	
	public MidTest() {
		setPreferredSize(new Dimension(700, 500));
		setBackground(Color.LIGHT_GRAY);
		setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 2));
		ground = new Path2D.Float();
		
		new Timer(30, new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				frameNumber++;
				repaint();
			}
		}).start();
	}
	
	//
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g.create();
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		applyLimits(g2, xleftRequested, xrightRequested, ytopRequested, ybottomRequested, false);

		/* Draw the sky, ground, and road directly (untransformed). */
		g2.setColor(new Color(201, 228, 214));
		g2.fillRect(0, 0, 7, 7); // b?u tr?i

		g2.setColor(new Color(240, 240, 240));
		CubicCurve2D c1 = new CubicCurve2D.Double(); // sóng bi?n c1
		c1.setCurve(-0.5, 1.1, 0.5, 2.1, 1, 0.8, 2.5, 1.3);
		g2.draw(c1);
		g2.setColor(new Color(110, 195, 201));
		CubicCurve2D c = new CubicCurve2D.Double(); // sóng bi?n 1
		c.setCurve(-0.5, 1, 0.5, 2, 1, 0.7, 2.5, 1.2);
		g2.draw(c);

		g2.setColor(new Color(240, 240, 240));
		CubicCurve2D d1 = new CubicCurve2D.Double(); // sóng bi?n d1
		d1.setCurve(2.1, 1, 3.2, 2.1, 4.1, 0.8, 5, 1.1);
		g2.draw(d1);
		g2.setColor(new Color(110, 195, 201));
		CubicCurve2D d = new CubicCurve2D.Double(); // sóng bi?n 2
		d.setCurve(2.1, 1, 3.2, 2, 4.1, 0.7, 5, 1);
		g2.draw(d);

		g2.setColor(new Color(110, 195, 201));
		CubicCurve2D e = new CubicCurve2D.Double(); // sóng bi?n 3
		e.setCurve(5.1, 1, 6.2, 2, 7.1, 0.7, 8, 1);
		g2.draw(e);

		g2.fill(ground); // the ground
		g2.setColor(new Color(110, 195, 201));
		g2.fill(new Rectangle2D.Double(0, -1, 10, 2)); // ný?c bi?n dý?i sóng

		AffineTransform saveTr = g2.getTransform();
		
		g2.translate(5.5, 3.3);
		drawSky(g2);
		g2.setTransform(saveTr);
		
		float x = (float) (12 * (frameNumber % 50) / 800.0);
		float y = (float) (12 * (frameNumber % 50) / 600.0);
		if(x<=0.4) {
		g2.translate(5, 3.5 + x);
		drawCo(g2);
		g2.setTransform(saveTr);}
		else {
		g2.translate(5, 4.5 - y);
		drawCo(g2);
		g2.setTransform(saveTr);
		}
		
		g2.translate(6 - 12 * (frameNumber % 300) / 500.0, 0);
		g2.scale(0.2, 0.2);
		drawCrab(g2);
		
		g2.setTransform(saveTr);
		g2.translate(-2 + 12 * (frameNumber % 300) / 1000.0, 0);
		g2.scale(0.25, 0.25);
		drawFish(g2);
		
		
	}
	
	private void applyLimits(Graphics2D g2, double xleft, double xright, double ytop, double ybottom,
			boolean preserveAspect) {
		int width = getWidth(); // The width of this drawing area, in pixels.
		int height = getHeight(); // The height of this drawing area, in pixels.
		if (preserveAspect) {
			// Adjust the limits to match the aspect ratio of the drawing area.
			double displayAspect = Math.abs((double) height / width);
			double requestedAspect = Math.abs((ybottom - ytop) / (xright - xleft));
			if (displayAspect > requestedAspect) {
				double excess = (ybottom - ytop) * (displayAspect / requestedAspect - 1);
				ybottom += excess / 2;
				ytop -= excess / 2;
			} else if (displayAspect < requestedAspect) {
				double excess = (xright - xleft) * (requestedAspect / displayAspect - 1);
				xright += excess / 2;
				xleft -= excess / 2;
			}
		}
		double pixelWidth = Math.abs((xright - xleft) / width);
		double pixelHeight = Math.abs((ybottom - ytop) / height);
		pixelSize = (float) Math.min(pixelWidth, pixelHeight);
		g2.scale(width / (xright - xleft), height / (ybottom - ytop));
		g2.translate(-xleft, -ytop);
	}
	
	//Draw Sky
	
	private void drawSky(Graphics2D g2) {
		g2.setColor(Color.yellow);
		g2.fill(new Ellipse2D.Double(-1.2, -0.4, 0.7, 0.7)); // sun

		g2.setColor(new Color(250, 240, 250));
		g2.fill(new Ellipse2D.Double(-0.5, -0.5, 0.7, 0.4)); // The cloud itself.
		g2.fill(new Ellipse2D.Double(-0.9, -0.5, 0.7, 0.6));
		g2.fill(new Ellipse2D.Double(-1.3, -0.5, 0.7, 0.4));
		g2.fill(new Ellipse2D.Double(-0.2, -0.5, 0.7, 0.3));

		g2.setColor(new Color(250, 250, 250));// The cloud itself.
		g2.fill(new Ellipse2D.Double(-5.6, -0.5, 0.7, 0.4));

		g2.setColor(new Color(250, 250, 250));
		g2.fill(new Ellipse2D.Double(-3, -0.1, 0.7, 0.4)); // The cloud itself.
		g2.fill(new Ellipse2D.Double(-3.4, -0.1, 0.7, 0.4));

		g2.setColor(new Color(250, 250, 250));
		g2.fill(new Ellipse2D.Double(1.1, -1, 0.7, 0.4));

		// The cloud itself.
		g2.fill(new Ellipse2D.Double(1.5, -1, 0.7, 0.4));

		
		
		drawBongBong(g2);
//		g2.scale(0.9,0.9);
//		drawBongBong(g2);
	}
	public void drawBongBong(Graphics2D g2)
	{
		g2.setColor(new Color(153, 209, 211)); // bong bóng ný?c
		g2.fill(new Ellipse2D.Double(0, -4, 0.1, 0.1));
		g2.setColor(new Color(153, 209, 211)); // bong bóng ný?c
		g2.fill(new Ellipse2D.Double(-0, -3.8, 0.15, 0.15));
	}
	private void drawCo(Graphics2D g2)
	{
		g2.setColor(Color.BLACK);
		g2.fill(new Ellipse2D.Double(-3.4, -0.7, 0.2, 0.3)); // c? 1
		g2.setColor(Color.BLACK);
		g2.fill(new Ellipse2D.Double(-3.6, -0.7, 0.2, 0.3));
		g2.setColor(new Color(201, 228, 214));
		g2.fill(new Ellipse2D.Double(-3.4, -0.75, 0.2, 0.3)); // c? 1
		g2.setColor(new Color(201, 228, 214));
		g2.fill(new Ellipse2D.Double(-3.6, -0.75, 0.2, 0.3));

		g2.setColor(Color.BLACK);
		g2.fill(new Ellipse2D.Double(-3.7, -1.2, 0.2, 0.3)); // c? 2
		g2.setColor(Color.BLACK);
		g2.fill(new Ellipse2D.Double(-3.9, -1.2, 0.2, 0.3));
		g2.setColor(new Color(201, 228, 214));
		g2.fill(new Ellipse2D.Double(-3.7, -1.25, 0.2, 0.3)); // c? 2
		g2.setColor(new Color(201, 228, 214));
		g2.fill(new Ellipse2D.Double(-3.9, -1.25, 0.2, 0.3));

		g2.setColor(Color.BLACK);
		g2.fill(new Ellipse2D.Double(-3, -1.2, 0.2, 0.3)); // c? 3
		g2.setColor(Color.BLACK);
		g2.fill(new Ellipse2D.Double(-3.2, -1.2, 0.2, 0.3));
		g2.setColor(new Color(201, 228, 214));
		g2.fill(new Ellipse2D.Double(-3, -1.25, 0.2, 0.3)); // c? 3
		g2.setColor(new Color(201, 228, 214));
		g2.fill(new Ellipse2D.Double(-3.2, -1.25, 0.2, 0.3));
	}
	private void drawCrab(Graphics2D g2)
	{
		AffineTransform tr = g2.getTransform(); // lýu các bi?n ð?i hi?n t?i

		//g2.translate(-1.5, -0.1); 
//		g2.scale(0.8, 0.8);
//		g2.setTransform(tr); // ph?c h?i s? bi?n ð?i
//		//g2.translate(1.5, -0.1); // 
//		g2.scale(0.8, 0.8);
//		g2.setColor(Color.BLACK);
//		g2.setTransform(tr); //  ph?c h?i s? bi?n ð?i
//		
//		
		//body
		g2.setColor(Color.red);						//crab
		g2.fill(new Ellipse2D.Double(1, -1, 3, 2));
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(3*pixelSize) );
		g2.draw(new Ellipse2D.Double(1, -1, 3, 2));
		//càng
		g2.setColor(Color.black);
		g2.draw(new Line2D.Double(3.5, 0.8, 4, 1.3)); //right
		g2.draw(new Line2D.Double(1.8, 0.9, 1.3, 1.4));//left 
		//right
		g2.setColor(Color.red);
	    CubicCurve2D c = new CubicCurve2D.Double(); 
		c.setCurve(4, 1.3, 3.7, 1.5, 3.3, 2, 4.4, 2.5);
		g2.fill(c);
		g2.setColor(Color.black);
		g2.draw(c);
		g2.setStroke( new BasicStroke(5*pixelSize) );
		g2.draw(new Line2D.Double( 4.4, 2.5, 4.3, 2)); 
		g2.setStroke( new BasicStroke(6*pixelSize) );
		g2.draw(new Line2D.Double( 4.3, 2,4.9, 2.4));
		g2.setColor(Color.red);
		g2.setStroke( new BasicStroke(3*pixelSize) );
		c.setCurve(4.9, 2.4, 5.3, 2,5.5 , 1.7, 4, 1.3);
		g2.fill(c);
		g2.setColor(Color.black);
		g2.draw(c);
		// tô
		g2.setColor(Color.red);
		c.setCurve(4.3, 2,4.9, 2.4,5, 2.3, 3.95, 1.28);
		g2.fill(c);
		g2.setColor(Color.red);
		c.setCurve(4.3, 2,4.4, 2.5,4.4, 2.5, 3.95, 1.35);
		g2.fill(c);
		//left
		c.setCurve(1.3, 1.4, 0.4, 1.6, 0, 2.2, 0.8,2.6);
		g2.fill(c);
		g2.setColor(Color.black);
		g2.draw(c);
		g2.draw(new Line2D.Double(0.8,2.6, 1.2, 2.1)); 
		g2.draw(new Line2D.Double(1.2,2.1, 1.6, 2.6)); 
		g2.setColor(Color.red);
		c.setCurve(1.6, 2.6, 1.8, 2.2, 1.9, 1.5, 1.3,1.4);
		g2.fill(c);
		g2.setColor(Color.black);
		g2.draw(c);
		//tô
		g2.setColor( Color.red);
		c.setCurve(0.8,2.6, 1.3, 2, 1.3, 2, 1.25,1.4);
		g2.fill(c);
		c.setCurve(1.6, 2.6, 1.1,2, 1.2,2.1, 1.3,1.36);
		g2.fill(c);
		//m?t cá
		g2.setColor(Color.black);
		g2.draw(new Line2D.Double(2.2,1, 2, 1.7));
		g2.draw(new Line2D.Double(3,1, 3.2, 1.7));
		g2.setColor(Color.white);
		g2.fill(new Ellipse2D.Double(1.7, 1.4, 0.6, 0.6));	//T
		g2.fill(new Ellipse2D.Double(2.85, 1.4, 0.6, 0.6));//P		
		g2.setColor(Color.black);
		g2.fill(new Ellipse2D.Double(1.7, 1.45, 0.4, 0.4));//T
		g2.fill(new Ellipse2D.Double(2.85, 1.45, 0.4, 0.4));//P
		//mi?ng
		c.setCurve(1.8,0.3, 2,0.1, 2.6,0.1, 2.8,0.3);
		g2.draw(c);
		//chân
		c.setCurve(-1,0.6, -0.1,1, 0.1,1.6, 1.3,0.5);
		g2.draw(c);
		c.setCurve(-1.2,0, -0,0.4, -0.2,1.3, 1,0.2);
		g2.draw(c);
		c.setCurve(-1,-0.7, -0.1,-0.3, -0.1,0.9, 1.1,-0.1);
		g2.draw(c);
		
		c.setCurve(3.7,0.5, 4.5,1.5, 4.8,1, 6,0.4);
		g2.draw(c);
		c.setCurve(3.9,0.1, 4.7,1.1, 5,0.6, 6,-0.2);
		g2.draw(c);
		c.setCurve(3.8,-0.3, 4.5,0.5, 4.8,0.2, 5.8,-0.8);
		g2.draw(c);
	}
	//public void draw
	private void drawFish(Graphics2D g2) {
		AffineTransform tr = g2.getTransform(); // lýu các bi?n ð?i hi?n t?i

		//g2.translate(-1.5, -0.1); 
		g2.scale(0.8, 0.8);
		g2.setTransform(tr); // ph?c h?i s? bi?n ð?i
		//g2.translate(1.5, -0.1); // 
		g2.scale(0.8, 0.8);
		g2.setColor(Color.BLACK);
		g2.setTransform(tr); //  ph?c h?i s? bi?n ð?i

		g2.setColor(new Color(225, 0, 00));
		
		//tô vây trên
		g2.setColor(Color.YELLOW);
		g2.fill(new Ellipse2D.Double(5.7, 1.25, 2.3, 1));
		g2.setColor(Color.yellow);
		g2.fill(new Ellipse2D.Double(6, 1.75, 0.5, 0.5));
		//tô ðuôi sau
		g2.setColor(Color.yellow);
		CubicCurve2D e = new CubicCurve2D.Double(); 
		e.setCurve(5.65, -0.2,  4, 0.8, 4.6, 0.7, 5.65, 1.2);
		g2.fill(e);
		drawBodyFish(g2);
		drawEyesFish(g2);
		drawInBodyFish(g2);
		drawTailsFish(g2);
	}
	

	public void drawInBodyFish(Graphics2D g) {
		Graphics2D g2 = (Graphics2D) g;
		QuadCurve2D v11 = new QuadCurve2D.Float();
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
	    v11.setCurve(7.4,1.75, 6.9, 1.6, 7.3, 1.4);
	    g2.draw(v11);
	    v11.setCurve(7.3, 1.4, 6.8, 1.2, 7.2, 1);
	    g2.draw(v11);
	    v11.setCurve(6.8,1.5, 6.3, 1.4, 6.7, 1.2);
	    g2.draw(v11);
	    v11.setCurve(6.7, 1.2, 6.1, 1, 6.6, 0.8);
	    g2.draw(v11);
	    v11.setCurve(6, 0.9, 5.5, 0.7, 5.9, 0.5);
	    g2.draw(v11);
	    v11.setCurve(5.9, 0.5, 5.4, 0.2, 5.9, 0.1);
	    g2.draw(v11);
	    //vây vàng
	    g2.setColor(Color.YELLOW);
	    v11.setCurve(6.75, 0.4, 7.55, 0, 6.75, -0.3);
	    g2.fill(v11);
	    g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
		v11.setCurve(6.75, 0.4, 7.55, 0, 6.75, -0.3);
	    g2.draw(v11);
	    g2.setColor(Color.YELLOW);
	    CubicCurve2D e = new CubicCurve2D.Double(); 
		e.setCurve(6.75, -0.3, 6.3, -0.1, 6.3, 0.4, 6.75, 0.4);
		g2.fill(e);
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
		CubicCurve2D e1 = new CubicCurve2D.Double(); 
		e1.setCurve(6.75, -0.3, 6.3, -0.1, 6.3, 0.4, 6.75, 0.4);
		g2.draw(e1);
		//vây ðen trong vây vàng
		g2.setColor(Color.black);
		g2.draw(new Line2D.Double(6.9, 0.2, 6.5, 0.3));
		g2.draw(new Line2D.Double(6.95, -0.1, 6.6, -0.17));
		g2.draw(new Line2D.Double(6.92, 0.08, 6.4, 0.08));
		//vây ngoài body
		//g2.setColor(Color.red);
		g2.setColor(Color.YELLOW);
	    CubicCurve2D e2 = new CubicCurve2D.Double(); 
		e2.setCurve(5.8, 1.4, 5.4, 1.8, 5.7, 2.3, 6.1, 2.2);
	    g2.fill(e2);
	    g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
		e2.setCurve(5.8, 1.4, 5.4, 1.8, 5.7, 2.3, 6.1, 2.2);
	    g2.draw(e2);
		
	    g2.setColor(Color.YELLOW);
	    e2.setCurve(6.1, 2.2, 6.4, 2.8, 7.4, 3, 7.65, 2.1);
	    g2.fill(e2);
	    g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
		e2.setCurve(6.1, 2.2, 6.4, 2.8, 7.4, 3, 7.65, 2.1);
	    g2.draw(e2);
	    
	    g2.setColor(Color.YELLOW);
	    e2.setCurve(7.65, 2.1, 7.8, 2.3, 8.3, 2.1, 8.1, 1.5);
	    g2.fill(e2);
	    g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
		e2.setCurve(7.65, 2.1, 7.8, 2.3, 8.3, 2.1, 8.1, 1.5);
	    g2.draw(e2);
	    
	    g2.setColor(Color.yellow);
	    e2.setCurve(7.5, 1.95, 7.8, 2.1, 8.2, 2.2, 8, 1.65);
	    g2.fill(e2);
	    //vây ðen
	    g2.setColor(Color.black);
		g2.draw(new Line2D.Double(5.7, 1.8,6 , 1.65));
		g2.draw(new Line2D.Double(5.9, 2, 6.2, 1.75));
		g2.draw(new Line2D.Double(6.2, 2.2, 6.4, 1.85));
		g2.draw(new Line2D.Double(6.4, 2.3, 6.6, 1.95));
		g2.draw(new Line2D.Double(6.67, 2.4, 6.8, 2));
		g2.draw(new Line2D.Double(7, 2.4, 7, 2));
		g2.draw(new Line2D.Double(7.2, 2, 7.4, 2.4));
		g2.draw(new Line2D.Double(7.4, 1.95, 7.6, 2.15));
		g2.draw(new Line2D.Double(7.9, 1.7, 8.1, 1.85));
		g2.draw(new Line2D.Double(7.7, 1.8, 7.9, 2));



	}
	
	public void drawTailsFish(Graphics2D g) { 			//ðuôi
		Graphics2D g2 = (Graphics2D) g;
		g2.setColor(Color.YELLOW);
	    CubicCurve2D e = new CubicCurve2D.Double(); 
		e.setCurve(5.65, -0.2, 4.5, -1.5, 4.2, 0.5, 4.6, 0.7);
		g2.fill(e);
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
		e.setCurve(5.65, -0.2, 4.5, -1.5, 4.2, 0.5, 4.6, 0.7);
		g2.draw(e);
		
		g2.setColor(Color.YELLOW);
		e.setCurve(4.6, 0.7, 4.1, 2, 5.2, 2.3, 5.65, 1.2);
		g2.fill(e);
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
		e.setCurve(4.6, 0.7, 4.1, 2, 5.2, 2.3, 5.65, 1.2);
		g2.draw(e);
		//vây ðen
		g2.setColor(Color.black);
		g2.draw(new Line2D.Double(4.8, -0.6,5.2, -0.1));
		g2.draw(new Line2D.Double(4.5, -0.2,4.9 , 0.15));
		g2.draw(new Line2D.Double(4.6, 0.7,4.8 , 0.7));
		g2.draw(new Line2D.Double(4.45, 0.2,4.9 , 0.5));
		g2.draw(new Line2D.Double(4.5, 1.3,4.9 , 1));
		g2.draw(new Line2D.Double(4.6, 1.7,5 , 1.3));
		//vây dý?i
		
		
		
		
//		TriangleShape triangleShape;
//		 triangleShape = new TriangleShape(new Point2D.Double(3, -1.5),
//			        new Point2D.Double(1.5, 0.2), new Point2D.Double(3.5, -0.5));
//		 g2.fill(triangleShape);
	}
//	
	
	public void drawBodyFish(Graphics2D g) {
		Graphics2D g2 = (Graphics2D) g;
		//thân
		g2.setColor(new Color(255	,69,	0));
		g2.fill(new Ellipse2D.Double(5.5, -1, 3, 3));
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
		g2.draw(new Ellipse2D.Double(5.5, -1, 3, 3));
		
		//ph?n h?nh tr?n c?t l?y thân
//		g2.setColor(new Color(110, 195, 2));
//		g2.fill(new Rectangle2D.Double(7.7, -2, 5, 5));
		QuadCurve2D q = new QuadCurve2D.Float();
		g2.setColor(Color.yellow);
		g2.setStroke( new BasicStroke(2*pixelSize) );
	    q.setCurve(7.7, -0.8, 6.7, 0.5, 7.7, 1.8);
	    g2.fill(q);
	    //vi?n g?n mi?ng
	    QuadCurve2D q1 = new QuadCurve2D.Float();
		g2.setColor(Color.yellow);
		g2.setStroke( new BasicStroke(2*pixelSize) );
	    q1.setCurve(7.7, -0.8, 9.5, 0.3, 7.7,1.8);
	    g2.fill(q1);
	    g2.setColor(Color.black);
	    g2.setStroke( new BasicStroke(2*pixelSize) );
	    q1.setCurve(7.7, -0.8, 9.5, 0.3, 7.7,1.8);
	    g2.draw(q1);
	  
		//lips
		QuadCurve2D q2 = new QuadCurve2D.Float();
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
	    q2.setCurve(8.1, -0.1, 8.23, -0.3, 8.45, -0.1);
	    g2.draw(q2);
	    
//		g2.setColor(new Color(255,0,0));
//		g2.fill(new Arc2D.Double(1, 1, 3, 3, 70,240, Arc2D.PIE));
//		g2.drawString("Arc2D", 1, 250);
		
	}
	public void drawEyesFish(Graphics2D g) {
		Graphics2D g2 = (Graphics2D) g;
		//vi?n phân ð?u và thân
	    g2.setColor(Color.yellow);
	    CubicCurve2D e = new CubicCurve2D.Double(); 		
		e.setCurve(7.7,1.8,8.2,1.6,8.2,1.1,8.5,0.8);
		g2.fill(e);
		g2.setColor(Color.black);
		g2.setStroke( new BasicStroke(2*pixelSize) );
		e.setCurve(7.7,1.8,8.2,1.6,8.2,1.1,8.5,0.8);
		g2.draw(e);
		
		
		g2.setColor(new Color(110, 195, 201));
		g2.setStroke( new BasicStroke(2*pixelSize) );
		e.setCurve(7.9,1.7,8.25,1.6,8.25,0.6,9,0.7);
		g2.fill(e);
		
//		g2.fill(new Ellipse2D.Double(8.1,0.46, 2.5, 2.7));
		g2.setColor(Color.yellow);
		g2.fill(new Ellipse2D.Double(7.6, -0.75, 0.3, 2.5));
		
//	    //m?t
		g2.setColor(Color.white);
		g2.fill(new Ellipse2D.Double(7.58,0.7, 0.5, 0.5));
		g2.setColor(Color.black);
	    g2.setStroke( new BasicStroke(2*pixelSize) );
	    g2.draw(new Ellipse2D.Double(7.58,0.7, 0.5, 0.5));
	    
	    g2.setColor(Color.black);
		g2.fill(new Ellipse2D.Double(7.7,0.75, 0.35, 0.35));
		g2.setColor(Color.white);
		g2.fill(new Ellipse2D.Double(7.9,0.9, 0.1, 0.15));
		//lông mi
		QuadCurve2D l1 = new QuadCurve2D.Float();
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
	    l1.setCurve(7.45, 1.15, 7.5, 1, 7.61, 1.1);
	    g2.draw(l1);
	    
	    QuadCurve2D l2 = new QuadCurve2D.Float();
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
	    l2.setCurve(7.5, 1.25, 7.55, 1.13, 7.68, 1.17);
	    g2.draw(l2);
		
	    QuadCurve2D l3 = new QuadCurve2D.Float();
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
	    l3.setCurve(7.6, 1.28, 7.63, 1.13, 7.78, 1.17);
	    g2.draw(l3);
	    //lông mày
	    QuadCurve2D l4 = new QuadCurve2D.Float();
		g2.setColor(Color.BLACK);
		g2.setStroke( new BasicStroke(2*pixelSize) );
	    l4.setCurve(7.7, 1.37, 7.72, 1.55, 7.88, 1.4);
	    g2.draw(l4);
	}
}
